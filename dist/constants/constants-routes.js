"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.constTexts = void 0;
exports.constTexts = {
    authRoute: {
        name: "auth",
        login: "signin",
        adminLogin: "adminSignin",
        supportLogin: "supportLogin",
        moderatorLogin: "moderatorLogin",
        signUp: "signup",
        forgetPassword: "forget-password",
        resetPassword: "reset-password",
        verifyOtp: "verify-otp",
        me: "me",
        phoneAuth: "phoneAuth",
        verifyPhoneOTP: "verifyPhoneOTP",
        phoneAuthUpdate: "phoneAuthUpdate",
        socialAuth: "socialAuth",
        verifyAccount: "verifyEmail",
        otpResend: "otpResend",
        logOut: "logOut",
        blockUserAccount: "blockUserAccount/:id",
    },
    postRoute: {
        name: "post",
        filter: "filter",
        getAllPosts: "getAllPosts",
        my: "myPost/",
        users: "usersPost/:id",
        specific: "specific/:id",
        reply: "reply",
        completedByOther: "completedByOther",
        update: ":id",
        delete: ":id",
        details: "details/:id",
        deleteImage: "deleteImage/:id",
        search: "search",
        withinRadius: "withinRadius"
    },
    assignedRoute: {
        name: "assignTask",
        byMe: "AssignedByMe",
        toMe: "AssignedToMe",
        delete: "delete/:id",
        update: "update/:id",
        accept: "acceptAssignment/:id",
        finalrating: 'finalrating/:userId',
        myCompTasks: "mycompletedTasks/:userId",
        compTaskByMe: "tasksCompletedByMe/:userId",
    },
    commentRoute: {
        name: "comment",
        my: "myreply",
        specific: "specific",
        post: "post",
        update: ":id",
        delete: ":id",
        details: "details/:id",
        search: "search",
    },
    mailRoute: {
        name: "mail",
        report: "report",
        contactUs: "contactUs",
    },
    policiesRoute: {
        name: "policy",
        privacy: "privacy",
        teramAndCond: "teramAndCond",
        refund: "refund",
        update: ":id",
        delete: ":id",
        getOne: ":id",
    },
    reviewsRoute: {
        name: "reviews",
        update: ":id",
        delete: ":id",
        getOne: ":id",
    },
    searcRoute: {
        name: "search",
        filter: "filter",
    },
    userRoute: {
        name: "users",
        update: "update",
        otherUserProfile: "otherUserProfile",
        allUsers: "allUsers",
        dashUsers: "dashUsersCount",
        delete: ":id",
        schema: "/schema",
        handleBlock: "handleBlock",
        deleteAccount: "deleteAccount",
    },
    chatRoute: {
        name: "chat",
        inbox: "inbox",
        detail: ":id",
    },
    notifyRoute: {
        name: "notification",
        count: "count",
        chatCount: "chatCount",
        updateChat: "updateChat",
        detail: ":id",
        update: ":id",
    },
};
//# sourceMappingURL=constants-routes.js.map